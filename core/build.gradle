plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.6"
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

version = "0.1"
group = "org.zerobs"

repositories {
    mavenCentral()
}

micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.zerobs.*")
    }
}

dependencies {
    micronautVersion = "3.1.0"
    annotationProcessor('org.projectlombok:lombok:1.18.20')
    implementation("io.micronaut:micronaut-runtime:$micronautVersion")
    implementation('javax.annotation:javax.annotation-api:1.3.2')
    compileOnly('org.projectlombok:lombok:1.18.20')
    runtimeOnly('ch.qos.logback:logback-classic:1.2.6')
    compileOnly('org.graalvm.nativeimage:svm:21.2.0')

    implementation('io.micronaut:micronaut-validation:$micronautVersion')

    testImplementation("io.micronaut:micronaut-http-client:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    compileOnly "io.micronaut:micronaut-aop:$micronautVersion"

    implementation group: 'javax.inject', name: 'javax.inject', version: '1'
//    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
//    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
//
//    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.954'
//    implementation group: 'com.amazonaws.serverless', name: 'aws-serverless-java-container-springboot2', version: '1.5.2'
//
//    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
}


application {
    mainClass.set("org.zerobs.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "Zero-BS_polla-backend"
    }
}

tasks.named('sonarqube').configure {
    dependsOn test
}
