plugins {
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "2.0.6"
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

version = "0.1"
group = "org.zerobs.polla"

repositories {
    mavenCentral()
}

micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.zerobs.polla.*")
    }
}

dependencies {
    def micronautVersion = '3.1.0'
    implementation      group: 'io.micronaut', name: 'micronaut-runtime',     version: micronautVersion
    implementation      group: 'io.micronaut', name: 'micronaut-validation',  version: micronautVersion
    testImplementation  group: 'io.micronaut', name: 'micronaut-http-client', version: micronautVersion
    annotationProcessor group: 'io.micronaut', name: 'micronaut-inject-java', version: micronautVersion
    compileOnly         group: 'io.micronaut', name: 'micronaut-aop',         version: micronautVersion

    compileOnly group: 'org.graalvm.nativeimage', name: 'svm', version: '21.2.0'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    runtimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.6'

    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.12.87'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
}


application {
    mainClass.set("org.zerobs.polla.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "polla-backend-core"
        property "sonar.projectName", "polla-backend-core"
    }
}

tasks.named('sonarqube').configure {
    dependsOn test
}
